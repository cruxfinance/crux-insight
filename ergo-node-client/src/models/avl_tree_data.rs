/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AvlTreeData {
    /// Base16-encoded 32 byte digest
    #[serde(rename = "digest")]
    pub digest: String,
    #[serde(rename = "treeFlags", skip_serializing_if = "Option::is_none")]
    pub tree_flags: Option<i32>,
    #[serde(rename = "keyLength", skip_serializing_if = "Option::is_none")]
    pub key_length: Option<i32>,
    #[serde(rename = "valueLength", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub value_length: Option<Option<i32>>,
}

impl AvlTreeData {
    pub fn new(digest: String) -> AvlTreeData {
        AvlTreeData {
            digest,
            tree_flags: None,
            key_length: None,
            value_length: None,
        }
    }
}


