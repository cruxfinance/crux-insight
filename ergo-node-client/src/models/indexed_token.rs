/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// IndexedToken : Token indexed with extra information



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IndexedToken {
    /// Base16-encoded 32 byte modifier id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Base16-encoded 32 byte modifier id
    #[serde(rename = "boxId", skip_serializing_if = "Option::is_none")]
    pub box_id: Option<String>,
    /// The total supply of the token
    #[serde(rename = "emissionAmount", skip_serializing_if = "Option::is_none")]
    pub emission_amount: Option<i64>,
    /// The name of the token
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The description of the token
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The number of decimals the token supports
    #[serde(rename = "decimals", skip_serializing_if = "Option::is_none")]
    pub decimals: Option<i32>,
}

impl IndexedToken {
    /// Token indexed with extra information
    pub fn new() -> IndexedToken {
        IndexedToken {
            id: None,
            box_id: None,
            emission_amount: None,
            name: None,
            description: None,
            decimals: None,
        }
    }
}


