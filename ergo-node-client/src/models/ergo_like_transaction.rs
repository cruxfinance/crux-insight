/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ErgoLikeTransaction {
    /// Base16-encoded 32 byte modifier id
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "inputs")]
    pub inputs: Vec<crate::models::ErgoTransactionInput>,
    #[serde(rename = "dataInputs")]
    pub data_inputs: Vec<crate::models::ErgoTransactionDataInput>,
    #[serde(rename = "outputs")]
    pub outputs: Vec<crate::models::ErgoTransactionOutput>,
}

impl ErgoLikeTransaction {
    pub fn new(id: String, inputs: Vec<crate::models::ErgoTransactionInput>, data_inputs: Vec<crate::models::ErgoTransactionDataInput>, outputs: Vec<crate::models::ErgoTransactionOutput>) -> ErgoLikeTransaction {
        ErgoLikeTransaction {
            id,
            inputs,
            data_inputs,
            outputs,
        }
    }
}


