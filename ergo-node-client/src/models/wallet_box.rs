/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WalletBox {
    #[serde(rename = "box")]
    pub r#box: Box<crate::models::ErgoTransactionOutput>,
    /// Number of confirmations, if the box is included into the blockchain
    #[serde(rename = "confirmationsNum", deserialize_with = "Option::deserialize")]
    pub confirmations_num: Option<i32>,
    /// Encoded Ergo Address
    #[serde(rename = "address")]
    pub address: String,
    /// Base16-encoded 32 byte modifier id
    #[serde(rename = "creationTransaction")]
    pub creation_transaction: String,
    /// Base16-encoded 32 byte modifier id
    #[serde(rename = "spendingTransaction")]
    pub spending_transaction: String,
    /// The height the box was spent at
    #[serde(rename = "spendingHeight", deserialize_with = "Option::deserialize")]
    pub spending_height: Option<i32>,
    /// The height the transaction containing the box was included in a block at
    #[serde(rename = "inclusionHeight")]
    pub inclusion_height: i32,
    /// A flag signalling whether the box is created on main chain
    #[serde(rename = "onchain")]
    pub onchain: bool,
    /// A flag signalling whether the box was spent
    #[serde(rename = "spent")]
    pub spent: bool,
    /// An index of a box in the creating transaction
    #[serde(rename = "creationOutIndex")]
    pub creation_out_index: i32,
    /// Scan identifiers the box relates to
    #[serde(rename = "scans")]
    pub scans: Vec<i32>,
}

impl WalletBox {
    pub fn new(r#box: crate::models::ErgoTransactionOutput, confirmations_num: Option<i32>, address: String, creation_transaction: String, spending_transaction: String, spending_height: Option<i32>, inclusion_height: i32, onchain: bool, spent: bool, creation_out_index: i32, scans: Vec<i32>) -> WalletBox {
        WalletBox {
            r#box: Box::new(r#box),
            confirmations_num,
            address,
            creation_transaction,
            spending_transaction,
            spending_height,
            inclusion_height,
            onchain,
            spent,
            creation_out_index,
            scans,
        }
    }
}


