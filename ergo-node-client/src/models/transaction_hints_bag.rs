/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// TransactionHintsBag : prover hints extracted from a transaction



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransactionHintsBag {
    /// Hints which contain secrets, do not share them!
    #[serde(rename = "secretHints", skip_serializing_if = "Option::is_none")]
    pub secret_hints: Option<Vec<::std::collections::HashMap<String, Vec<crate::models::InputHintsValueInner>>>>,
    /// Hints which contain public data only, share them freely!
    #[serde(rename = "publicHints", skip_serializing_if = "Option::is_none")]
    pub public_hints: Option<Vec<::std::collections::HashMap<String, Vec<crate::models::InputHintsValueInner>>>>,
}

impl TransactionHintsBag {
    /// prover hints extracted from a transaction
    pub fn new() -> TransactionHintsBag {
        TransactionHintsBag {
            secret_hints: None,
            public_hints: None,
        }
    }
}


