/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// WalletStatus : Status of the node wallet



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WalletStatus {
    /// true if wallet is initialized, false otherwise
    #[serde(rename = "isInitialized")]
    pub is_initialized: bool,
    /// true if wallet is unlocked, false otherwise
    #[serde(rename = "isUnlocked")]
    pub is_unlocked: bool,
    /// address to send change to. Empty when wallet is not initialized or locked. By default change address correponds to root key address, could be set via /wallet/updateChangeAddress method.
    #[serde(rename = "changeAddress")]
    pub change_address: String,
    /// last scanned height for the wallet (and external scans)
    #[serde(rename = "walletHeight")]
    pub wallet_height: i32,
    /// last wallet error caught
    #[serde(rename = "error")]
    pub error: String,
}

impl WalletStatus {
    /// Status of the node wallet
    pub fn new(is_initialized: bool, is_unlocked: bool, change_address: String, wallet_height: i32, error: String) -> WalletStatus {
        WalletStatus {
            is_initialized,
            is_unlocked,
            change_address,
            wallet_height,
            error,
        }
    }
}


