/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// TransactionSigningRequest : A request to sign a transaction with secrets provided



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransactionSigningRequest {
    #[serde(rename = "tx")]
    pub tx: crate::models::UnsignedErgoTransaction,
    /// Optional list of inputs to be used in serialized form
    #[serde(rename = "inputsRaw", skip_serializing_if = "Option::is_none")]
    pub inputs_raw: Option<Vec<String>>,
    /// Optional list of inputs to be used in serialized form
    #[serde(rename = "dataInputsRaw", skip_serializing_if = "Option::is_none")]
    pub data_inputs_raw: Option<Vec<String>>,
    #[serde(rename = "hints", skip_serializing_if = "Option::is_none")]
    pub hints: Option<Box<crate::models::TransactionHintsBag>>,
    #[serde(rename = "secrets")]
    pub secrets: Box<crate::models::TransactionSigningRequestSecrets>,
}

impl TransactionSigningRequest {
    /// A request to sign a transaction with secrets provided
    pub fn new(tx: crate::models::UnsignedErgoTransaction, secrets: crate::models::TransactionSigningRequestSecrets) -> TransactionSigningRequest {
        TransactionSigningRequest {
            tx,
            inputs_raw: None,
            data_inputs_raw: None,
            hints: None,
            secrets: Box::new(secrets),
        }
    }
}


