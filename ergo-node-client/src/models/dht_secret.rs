/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// DhtSecret : Hex-encoded big-endian 256-bits secret exponent \"w\" along with generators \"g\", \"h\", and group elements \"u\", \"v\", such as g^w = u, h^w = v



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DhtSecret {
    /// Hex-encoded big-endian 256-bits secret exponent
    #[serde(rename = "secret")]
    pub secret: String,
    /// Hex-encoded \"g\" generator for the Diffie-Hellman tuple (secp256k1 curve point)
    #[serde(rename = "g")]
    pub g: String,
    /// Hex-encoded \"h\" generator for the Diffie-Hellman tuple (secp256k1 curve point)
    #[serde(rename = "h")]
    pub h: String,
    /// Hex-encoded \"u\" group element of the Diffie-Hellman tuple (secp256k1 curve point)
    #[serde(rename = "u")]
    pub u: String,
    /// Hex-encoded \"v\" group element of the Diffie-Hellman tuple (secp256k1 curve point)
    #[serde(rename = "v")]
    pub v: String,
}

impl DhtSecret {
    /// Hex-encoded big-endian 256-bits secret exponent \"w\" along with generators \"g\", \"h\", and group elements \"u\", \"v\", such as g^w = u, h^w = v
    pub fn new(secret: String, g: String, h: String, u: String, v: String) -> DhtSecret {
        DhtSecret {
            secret,
            g,
            h,
            u,
            v,
        }
    }
}


