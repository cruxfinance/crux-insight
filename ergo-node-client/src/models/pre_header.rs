/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PreHeader {
    /// Basic timestamp definition
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
    /// Ergo blockchain protocol version
    #[serde(rename = "version")]
    pub version: i32,
    #[serde(rename = "nBits")]
    pub n_bits: i64,
    #[serde(rename = "height")]
    pub height: i32,
    /// Base16-encoded 32 byte modifier id
    #[serde(rename = "parentId")]
    pub parent_id: String,
    /// Base16-encoded votes for a soft-fork and parameters
    #[serde(rename = "votes")]
    pub votes: String,
    #[serde(rename = "minerPk", skip_serializing_if = "Option::is_none")]
    pub miner_pk: Option<String>,
}

impl PreHeader {
    pub fn new(timestamp: i64, version: i32, n_bits: i64, height: i32, parent_id: String, votes: String) -> PreHeader {
        PreHeader {
            timestamp,
            version,
            n_bits,
            height,
            parent_id,
            votes,
            miner_pk: None,
        }
    }
}


