/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// ProofOfUpcomingTransactions : Proof that a block corresponding to given header without PoW contains some transactions



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProofOfUpcomingTransactions {
    /// Base16-encoded serialized header without Proof-of-Work
    #[serde(rename = "msgPreimage")]
    pub msg_preimage: String,
    /// Merkle proofs of transactions included into blocks (not necessarily all the block transactions)
    #[serde(rename = "txProofs")]
    pub tx_proofs: Vec<crate::models::MerkleProof>,
}

impl ProofOfUpcomingTransactions {
    /// Proof that a block corresponding to given header without PoW contains some transactions
    pub fn new(msg_preimage: String, tx_proofs: Vec<crate::models::MerkleProof>) -> ProofOfUpcomingTransactions {
        ProofOfUpcomingTransactions {
            msg_preimage,
            tx_proofs,
        }
    }
}


