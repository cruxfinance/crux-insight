/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// WalletTransaction : Transaction augmented with some useful information



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WalletTransaction {
    /// Base16-encoded transaction id bytes
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Transaction inputs
    #[serde(rename = "inputs")]
    pub inputs: Vec<crate::models::ErgoTransactionInput>,
    /// Transaction data inputs
    #[serde(rename = "dataInputs")]
    pub data_inputs: Vec<crate::models::ErgoTransactionDataInput>,
    /// Transaction outputs
    #[serde(rename = "outputs")]
    pub outputs: Vec<crate::models::ErgoTransactionOutput>,
    /// Height of a block the transaction was included in
    #[serde(rename = "inclusionHeight")]
    pub inclusion_height: i32,
    /// Number of transaction confirmations
    #[serde(rename = "numConfirmations")]
    pub num_confirmations: i32,
    /// Scan identifiers the transaction relates to
    #[serde(rename = "scans")]
    pub scans: Vec<i32>,
    /// Size in bytes
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
}

impl WalletTransaction {
    /// Transaction augmented with some useful information
    pub fn new(inputs: Vec<crate::models::ErgoTransactionInput>, data_inputs: Vec<crate::models::ErgoTransactionDataInput>, outputs: Vec<crate::models::ErgoTransactionOutput>, inclusion_height: i32, num_confirmations: i32, scans: Vec<i32>) -> WalletTransaction {
        WalletTransaction {
            id: None,
            inputs,
            data_inputs,
            outputs,
            inclusion_height,
            num_confirmations,
            scans,
            size: None,
        }
    }
}


