/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScanRequest {
    #[serde(rename = "scanName", skip_serializing_if = "Option::is_none")]
    pub scan_name: Option<String>,
    #[serde(rename = "removeOffchain", skip_serializing_if = "Option::is_none")]
    pub remove_offchain: Option<bool>,
    #[serde(rename = "walletInteraction", skip_serializing_if = "Option::is_none")]
    pub wallet_interaction: Option<WalletInteraction>,
    #[serde(rename = "trackingRule", skip_serializing_if = "Option::is_none")]
    pub tracking_rule: Option<Box<crate::models::ScanningPredicate>>,
}

impl ScanRequest {
    pub fn new() -> ScanRequest {
        ScanRequest {
            scan_name: None,
            remove_offchain: None,
            wallet_interaction: None,
            tracking_rule: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WalletInteraction {
    #[serde(rename = "false")]
    False,
    #[serde(rename = "shared")]
    Shared,
    #[serde(rename = "forced")]
    Forced,
}

impl Default for WalletInteraction {
    fn default() -> WalletInteraction {
        Self::False
    }
}

