/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// GenerateCommitmentsRequest : request to generate commitments to sign a transaction



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GenerateCommitmentsRequest {
    #[serde(rename = "tx")]
    pub tx: crate::models::UnsignedErgoTransaction,
    #[serde(rename = "secrets", skip_serializing_if = "Option::is_none")]
    pub secrets: Option<Box<crate::models::GenerateCommitmentsRequestSecrets>>,
    /// Optional list of inputs to be used in serialized form
    #[serde(rename = "inputsRaw", skip_serializing_if = "Option::is_none")]
    pub inputs_raw: Option<Vec<String>>,
    /// Optional list of inputs to be used in serialized form
    #[serde(rename = "dataInputsRaw", skip_serializing_if = "Option::is_none")]
    pub data_inputs_raw: Option<Vec<String>>,
}

impl GenerateCommitmentsRequest {
    /// request to generate commitments to sign a transaction
    pub fn new(tx: crate::models::UnsignedErgoTransaction) -> GenerateCommitmentsRequest {
        GenerateCommitmentsRequest {
            tx,
            secrets: None,
            inputs_raw: None,
            data_inputs_raw: None,
        }
    }
}


