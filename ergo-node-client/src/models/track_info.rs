/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TrackInfo {
    #[serde(rename = "invalidModifierApproxSize")]
    pub invalid_modifier_approx_size: i32,
    /// Currently requested modifiers
    #[serde(rename = "requested")]
    pub requested: ::std::collections::HashMap<String, ::std::collections::HashMap<String, crate::models::RequestedInfo>>,
    /// Received modifiers
    #[serde(rename = "received")]
    pub received: ::std::collections::HashMap<String, ::std::collections::HashMap<String, crate::models::ConnectedPeer>>,
}

impl TrackInfo {
    pub fn new(invalid_modifier_approx_size: i32, requested: ::std::collections::HashMap<String, ::std::collections::HashMap<String, crate::models::RequestedInfo>>, received: ::std::collections::HashMap<String, ::std::collections::HashMap<String, crate::models::ConnectedPeer>>) -> TrackInfo {
        TrackInfo {
            invalid_modifier_approx_size,
            requested,
            received,
        }
    }
}


