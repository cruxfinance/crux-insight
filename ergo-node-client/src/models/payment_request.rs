/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 5.0.12
 * Contact: ergoplatform@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

/// PaymentRequest : Request for generation of payment transaction to a given address



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PaymentRequest {
    /// Encoded Ergo Address
    #[serde(rename = "address")]
    pub address: String,
    /// Payment amount
    #[serde(rename = "value")]
    pub value: i64,
    /// Assets list in the transaction
    #[serde(rename = "assets", skip_serializing_if = "Option::is_none")]
    pub assets: Option<Vec<crate::models::Asset>>,
    /// Ergo box registers
    #[serde(rename = "registers", skip_serializing_if = "Option::is_none")]
    pub registers: Option<::std::collections::HashMap<String, String>>,
}

impl PaymentRequest {
    /// Request for generation of payment transaction to a given address
    pub fn new(address: String, value: i64) -> PaymentRequest {
        PaymentRequest {
            address,
            value,
            assets: None,
            registers: None,
        }
    }
}


